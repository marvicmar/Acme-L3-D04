
package acme.testing.any.peep;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvFileSource;

import acme.testing.TestHarness;

class AnyPeepCreateTest extends TestHarness {

	@ParameterizedTest
	@CsvFileSource(resources = "/any/peep/create-positive.csv", encoding = "utf-8", numLinesToSkip = 1)
	void test100Positive(final String title, final String nick, final String message, final String email, final String link, final String username, final String password) {

		super.signIn(username, password);

		super.clickOnMenu("Any", "List all peeps");
		super.checkListingExists();

		super.clickOnButton("Create");
		super.fillInputBoxIn("nick", nick);
		super.fillInputBoxIn("title", title);
		super.fillInputBoxIn("message", message);
		super.fillInputBoxIn("email", email);
		super.fillInputBoxIn("link", link);
		super.clickOnSubmit("Create");

		super.clickOnMenu("Any", "List all peeps");
		super.checkListingExists();
		super.sortListing(2, "desc");
		super.checkColumnHasValue(0, 1, title);
		super.checkColumnHasValue(0, 2, nick);

		super.clickOnListingRecord(0);
		super.checkFormExists();
		super.checkInputBoxHasValue("title", title);
		super.checkInputBoxHasValue("nick", nick);
		super.checkInputBoxHasValue("message", message);
		super.checkInputBoxHasValue("email", email);
		super.checkInputBoxHasValue("link", link);

		super.signOut();
	}

	@Test
	void test101Positive() {

		final String title = "ZZZTitle";
		final String nick = "Watson, Emma";
		final String message = "Message";
		final String email = "example@gmail.com";
		final String link = "http://example.com";
		final int peepRecordIndex = 0;

		super.signIn("student1", "student1");

		super.clickOnMenu("Any", "List all peeps");
		super.checkListingExists();

		super.clickOnButton("Create");
		super.fillInputBoxIn("title", title);
		super.fillInputBoxIn("message", message);
		super.fillInputBoxIn("email", email);
		super.fillInputBoxIn("link", link);
		super.clickOnSubmit("Create");

		super.clickOnMenu("Any", "List all peeps");
		super.checkListingExists();
		super.sortListing(1, "desc");
		super.checkColumnHasValue(peepRecordIndex, 1, title);
		super.checkColumnHasValue(peepRecordIndex, 2, nick);

		super.clickOnListingRecord(peepRecordIndex);
		super.checkFormExists();
		super.checkInputBoxHasValue("title", title);
		super.checkInputBoxHasValue("nick", nick); // Nickname is autogenerated
		super.checkInputBoxHasValue("message", message);
		super.checkInputBoxHasValue("email", email);
		super.checkInputBoxHasValue("link", link);

		super.signOut();
	}

	@ParameterizedTest
	@CsvFileSource(resources = "/any/peep/create-negative.csv", encoding = "utf-8", numLinesToSkip = 1)
	void test200Negative(final String title, final String nickname, final String message, final String email, final String url) {
		// HINT: this test attempts to create enrolments with incorrect data.

		super.signIn("student1", "student1");

		super.clickOnMenu("Any", "List all peeps");
		super.checkListingExists();

		super.clickOnButton("Create");
		super.checkFormExists();

		super.fillInputBoxIn("title", title);
		super.fillInputBoxIn("nick", nickname);
		super.fillInputBoxIn("message", message);
		super.fillInputBoxIn("email", email);
		super.fillInputBoxIn("link", url);
		super.clickOnSubmit("Create");

		super.checkErrorsExist();

		super.signOut();
	}

}
